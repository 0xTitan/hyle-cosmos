syntax = "proto3";
package hyle.hyle.zktx.v1;

option go_package = "github.com/hyle/hyle/zktx";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Params defines the parameters of the module.
message Params { option (amino.name) = "hyle/hyle/zktx/Params"; }

// Counter defines a counter object.
// It is used only for genesis purposes. Collections does not need to use it.
message Counter {
  option (amino.name) = "hyle/hyle/zktx/Counter";

  // count defines the count of the counter.
  uint64 count = 1;

  // address defines the address that is associated with the count.
  string address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  ;
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // counter defines the counter object.
  repeated Counter counters = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // params defines all the parameters of the module.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// ContractState is the state of a contract
message ContractState {
  // The identifier of the verifier to run for this contract
  string verifier = 1;
  // An identifier for the program (may depend on verifier)
  string program_id = 2;
  // Recap of the current contract state
  bytes state_digest = 3;
}